name: Ruby on Rails CI/CD

on:
  pull_request:
    branches: [main, staging]
  push:
    branches: [main, staging]

env:
  GCP_REGION: "asia-southeast1"
  APP_NAME: "jarvis-demo"
  DOCKER_REPO_NAME: "jarvis-demo-repo"

jobs:
  ci-checks:
    name: Test, Lint & Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby and cache gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Run unit and system tests
        env:
          RAILS_ENV: test
        run: bin/rails test

  build-and-push:
    name: 🐳 Build, Push & Create Artifact
    runs-on: ubuntu-latest
    needs: [ci-checks]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging')
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev
      - name: Build and Push Docker Image
        id: build_step
        run: |
          IMAGE_URL="${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}"
          docker build -t $IMAGE_URL .
          docker push $IMAGE_URL
          echo $IMAGE_URL > ./image_url.txt
      - name: Upload Image URL as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-url-artifact
          path: ./image_url.txt

  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.ref == 'refs/heads/staging'
    environment: staging
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Image URL Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-url-artifact
      - name: Read Image URL from Artifact
        id: image_url_reader
        run: |
          IMAGE_URL=$(cat ./image_url.txt)
          echo "image_url=$IMAGE_URL" >> $GITHUB_OUTPUT
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Deploy Staging with Terraform
        id: terraform_deploy
        working-directory: ./terraform/environments
        env:
          TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_docker_image_url: ${{ steps.image_url_reader.outputs.image_url }}
          TF_VAR_rails_master_key: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          terraform init -reconfigure
          terraform workspace select staging
          terraform apply -auto-approve
          echo "app_url=$(terraform output -raw cloud_run_url)" >> $GITHUB_OUTPUT
      - name: Announce Deployment
        run: |
          echo "✅ Staging deployment successful! Application live at: ${{ steps.terraform_deploy.outputs.app_url }}"

  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.ref == 'refs/heads/main'
    environment: production
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Image URL Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-url-artifact
      - name: Read Image URL from Artifact
        id: image_url_reader
        run: |
          IMAGE_URL=$(cat ./image_url.txt)
          echo "image_url=$IMAGE_URL" >> $GITHUB_OUTPUT
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Deploy Production with Terraform
        id: terraform_deploy
        working-directory: ./terraform/environments
        env:
          TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_docker_image_url: ${{ steps.image_url_reader.outputs.image_url }}
          TF_VAR_rails_master_key: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          terraform init -reconfigure
          terraform workspace select production
          terraform apply -auto-approve
          echo "app_url=$(terraform output -raw cloud_run_url)" >> $GITHUB_OUTPUT
      - name: Announce Deployment
        run: |
          echo "✅ Production deployment successful! Application live at: ${{ steps.terraform_deploy.outputs.app_url }}"
